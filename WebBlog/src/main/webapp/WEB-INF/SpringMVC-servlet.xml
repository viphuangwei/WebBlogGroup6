<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost/webblog"></property>
		<property name="username" value="root"></property>
		<property name="password" value="password"></property>
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties" ref="hibernateProperties"></property>
		<property name="packagesToScan" value="mum">
			
		</property>
	</bean>

	<bean id="hibernateProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="connection.pool.size">true</prop>
				<prop key="hibernate.show_sql">true</prop>
				<!-- <prop key="hibernate.current_session_context_class">thread</prop> -->
			</props>
		</property>
	</bean>
	
	<tx:annotation-driven transaction-manager="txManager"  proxy-target-class="true"/>
	
	<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<mvc:annotation-driven />
	<context:component-scan  base-package="mum.ea.group6.webblog.controllers"/>

	
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
		
    <!-- Lets us find resources (.html etc) through the default servlet -->
    <mvc:default-servlet-handler/> 

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving 
    up static resources in the ${webappRoot}/resources/ directory -->
    <mvc:resources mapping="/resources/**" location="/resources/" />
	
	
	<!-- DAO BEANS-->
	<bean id="adminDao" class="mum.ea.group6.webblog.daoimpl.AdminDAOImpl">
		<property name="sf" ref="sessionFactory" />
	</bean>
	<bean id="announcmentDao" class="mum.ea.group6.webblog.daoimpl.AnnouncmentDAOImpl">
		<property name="sf" ref="sessionFactory" />
	</bean>
	<bean id="postAdminDao" class="mum.ea.group6.webblog.daoimpl.PostAdminDAOImpl">
		<property name="sf" ref="sessionFactory" />
	</bean>
	<bean id="postUserDao" class="mum.ea.group6.webblog.daoimpl.PostUserDAOImpl">
		<property name="sf" ref="sessionFactory" />
	</bean>
	<bean id="userDao" class="mum.ea.group6.webblog.daoimpl.UserDAOImpl">
		<property name="sf" ref="sessionFactory" />
	</bean>
	
	<!-- Service Beans -->
	
	<bean id="adminAccountService"
		class="mum.ea.group6.webblog.serviceimpl.AdminAccountServiceImpl">
		<constructor-arg ref="adminDao" />


	</bean>
	<bean id="announcmentService"
		class="mum.ea.group6.webblog.serviceimpl.AnnouncmentServiceImpl">
		<constructor-arg ref="announcmentDao" />


	</bean>
	<bean id="commentService" class="mum.ea.group6.webblog.serviceimpl.CommentServiceImpl">
		<constructor-arg index="1" ref="postAdminDao" />
		<constructor-arg index="0" ref="postUserDao" />
		<constructor-arg index="2" ref="userDao" />

	</bean>
	<bean id="postService" class="mum.ea.group6.webblog.serviceimpl.PostServiceImpl">
		<constructor-arg ref="postAdminDao" />


	</bean>
	<bean id="userAccountService"
		class="mum.ea.group6.webblog.serviceimpl.UserAccountServiceImpl">
		<constructor-arg ref="userDao" />
	</bean>
	
    <!-- needed for security tag lib -->
    <bean id="webexpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />   
    
	<!-- enable use-expressions -->
	<sec:http use-expressions="true" auto-config="true">
	        <sec:intercept-url pattern="/welcome.jsp" access="hasRole('ROLE_ADMIN')"/>
	        <sec:intercept-url pattern="/adminlogin" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
			<sec:form-login login-page="/adminlogin.jsp" authentication-failure-url="/loginfailed.jsp" default-target-url="/welcome.jsp"/>
	</sec:http>
    

    <sec:authentication-manager>
		<sec:authentication-provider>
            <sec:password-encoder hash="plaintext" />
            <sec:user-service>
                <sec:user name="test" password="123" authorities="ROLE_USER, ROLE_ADMIN" />
                <sec:user name="bob" password="123" authorities="ROLE_USER" />
            </sec:user-service>
        </sec:authentication-provider>
    </sec:authentication-manager>
	
</beans>
